apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

buildscript {
    // 引入jar包定义
    // 这个文件中定义的jar包可以直接在子项目中使用
    // 不需要再次使用 apply from 这个语句
    apply from: "dependency.gradle"

    repositories {
        mavenLocal()

        maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        maven { url "https://maven.aliyun.com/repository/google" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${versions.spring_boot}"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
    }
}

configurations {
    // 全局性的关闭依赖传递特性
    all {
        transitive = true as Configuration
    }

    compileOnly {
        extendsFrom annotationProcessor
    }

    // 所有需要忽略的包定义在此
    implementation.exclude module: "spring-boot-starter-tomcat"
}

repositories {
    mavenLocal()

    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    maven { url "https://maven.aliyun.com/repository/jcenter" }
    maven { url "https://maven.aliyun.com/repository/google" }
}

dependencies {
    compileOnly libraries.lombok
    annotationProcessor libraries.lombok

    implementation([
            libraries.boot_freemarker,

            libraries.mysql_java,
            libraries.mybatis_plus_gen,
            libraries.hutool_core,
    ])

    testImplementation  libraries.boot_test
}